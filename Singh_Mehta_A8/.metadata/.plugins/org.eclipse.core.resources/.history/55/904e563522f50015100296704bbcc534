package com.socket.node;

import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;


public class WebServer {
	
	public void listenSocket(){
		ServerSocket server;
		  try{
		    server = new ServerSocket(4444);
		  } catch (IOException e) {
		    System.out.println("Could not listen on port 4444");
		    System.exit(-1);
		  }
		  while(true){
		    ClientWorker w;
		    try{
		//server.accept returns a client connection
		      w = new ClientWorker(server.accept(), textArea);
		      Thread t = new Thread(w);
		      t.start();
		    } catch (IOException e) {
		      System.out.println("Accept failed: 4444");
		      System.exit(-1);
		    }
		  }
		}
	
	class ClientWorker implements Runnable {
		  private Socket client;
		//  private JTextArea textArea;

		//Constructor
		  ClientWorker(Socket client) {
		    this.client = client;
		    this.textArea = textArea;
		  }

		  public void run(){
		    String line;
		    BufferedReader in = null;
		    PrintWriter out = null;
		    try{
		      in = new BufferedReader(new 
		        InputStreamReader(client.getInputStream()));
		      out = new 
		        PrintWriter(client.getOutputStream(), true);
		    } catch (IOException e) {
		      System.out.println("in or out failed");
		      System.exit(-1);
		    }

		    while(true){
		      try{
		        line = in.readLine();
		//Send data back to client
		        out.println(line);
		//Append data to text area
		        textArea.append(line);
		       }catch (IOException e) {
		        System.out.println("Read failed");
		        System.exit(-1);
		       }
		    }
		  }
		}


		JTextArea.appendJTextArea.appendtextArea.append(line)synchronizedruntextArea.append(line)appendText(line)

		  public synchronized void appendText(line){
		    textArea.append(line);
		  }
		
		 protected void finalize(){
			//Objects created in run method are finalized when
			//program terminates and thread exits
			     try{
			        server.close();
			    } catch (IOException e) {
			        System.out.println("Could not close socket");
			        System.exit(-1);
			    }
			  }




}
